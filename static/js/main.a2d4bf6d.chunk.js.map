{"version":3,"sources":["compon/edit-session.compon.js","compon/session-list.compon.js","compon/create-session.compon.js","compon/create-client.compon.js","compon/navbar.compon.js","compon/client-history.compon.js","compon/edit-client.compon.js","compon/login.js","App.js","reportWebVitals.js","index.js"],"names":["EditSession","props","state","user","userId","clients","currentClient","sessionLength","startTime","sessionDate","Date","sessionPaid","onChangeClient","bind","onChangeSessionLength","onChangeDate","onChangeStartTime","onSubmit","Promise","all","axios","get","withCredentials","this","match","params","id","firstResponse","secondResponse","setState","data","username","userid","e","target","value","date","preventDefault","newSessionDataPackage","console","log","post","then","alert","window","location","required","onChange","selected","type","name","className","Component","SessionDataList","session","substring","to","_id","href","onClick","deleteSession","sessionPaidUpdater","SessionList","sessions","response","catch","error","filter","client","map","currentSession","res","tempuser","tempuserId","tempcurrentClient","tempsessionLength","tempstartTime","tempsessionDate","testdata","confirm","delete","el","showSessionList","CreateSession","clientId","showSessions","editClientLink","clientIdGrabber","clientsthatbelongtocurrentuser","firstName","lastName","x","clientFullName","y","toDateString","defaultValue","disabled","String","React","CreateClient","email","number","onChangeFirstName","onChangeLastName","onChangeEmail","onChangeNumber","newClientData","Navbar","loggedoutnow","ClientHistory","thirdResponse","EditClient","usesrId","deleteClient","userID","history","push","LoginPage","currentUserUpdater","useState","registerUsername","setRegisterUsername","regiserPassword","setRegisterPassword","loginUsername","setLoginUsername","loginPassword","setLoginPassword","info","setData","a","login","getUser","resolve","reject","password","placeholder","userData","Number","Math","round","random","App","currentUser","currentUserID","exact","path","render","testClient","testClientID","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2d4bf6d.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from \"axios\"\r\n\r\n\r\n\r\nexport default class EditSession extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            user: \"\",\r\n            userId: 0,\r\n            clients: [],\r\n            currentClient: \"\",\r\n            sessionLength: \"\",\r\n            startTime: \"\",\r\n            sessionDate: new Date(),\r\n            sessionPaid: false\r\n          }\r\nthis.onChangeClient = this.onChangeClient.bind(this);\r\nthis.onChangeSessionLength = this.onChangeSessionLength.bind(this);\r\nthis.onChangeDate = this.onChangeDate.bind(this);\r\nthis.onChangeStartTime = this.onChangeStartTime.bind(this)\r\nthis.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n\r\nasync componentDidMount() {\r\n\r\n  // Make requests\r\n  const [firstResponse, secondResponse] = await Promise.all([\r\n    axios.get(\"http://localhost:5000/users/locker\", {withCredentials: true}),\r\n    axios.get(\"http://localhost:5000/sessions/\" + this.props.match.params.id)\r\n  ]);\r\n\r\n  // Update state once with all responses\r\n  this.setState({\r\n      user: firstResponse.data.username,\r\n      userId: firstResponse.data.userid,\r\n      currentClient: secondResponse.data.currentClient,\r\n      sessionLength: secondResponse.data.sessionLength,\r\n      startTime: secondResponse.data.startTime,\r\n      sessionDate: new Date(secondResponse.data.sessionDate),\r\n\r\n  });\r\n\r\n}\r\n\r\n\r\n\r\n\r\nonChangeClient(e){\r\n    this.setState({\r\n      currentClient: e.target.value,\r\n    })\r\n  }\r\n  \r\n  onChangeSessionLength(e){\r\n  this.setState({  \r\n      sessionLength: e.target.value\r\n    })\r\n  }\r\n  \r\n  onChangeDate(date){\r\n    this.setState({\r\n      sessionDate: date\r\n    })\r\n  }\r\n  \r\n  onChangeStartTime(e){\r\n    this.setState({\r\n      startTime: e.target.value\r\n    })\r\n    \r\n  }\r\n\r\n  onSubmit(e){\r\n   \r\n    e.preventDefault();\r\n    const newSessionDataPackage = {\r\n      user: this.state.user,\r\n      userId: this.state.userId,\r\n      currentClient: this.state.currentClient,\r\n      sessionLength: this.state.sessionLength,\r\n      startTime: this.state.startTime,\r\n      sessionDate: this.state.sessionDate,\r\n      sessionPaid: this.state.sessionPaid,\r\n    }\r\n    console.log(newSessionDataPackage);\r\n    \r\n    axios.post(\"http://localhost:5000/sessions/update/\"+this.props.match.params.id, newSessionDataPackage)\r\n    .then(alert(\"Session has been updated\"))\r\n    // .then(<Redirect to='/history' />)\r\n    // .then(alert(\"Thank you for your time\"))\r\n    // .catch(alert(\"Error: 400, failed to add session\"))\r\n  \r\n    window.location = \"/history\"\r\n \r\n     \r\n    // this.props.history.replace(\"/history\")\r\n    // this.props.history.replace(\"/history\")\r\n  }\r\n   \r\n   \r\n\r\n\r\nrender(){\r\n    return(\r\n        <div>\r\n<form onSubmit={this.onSubmit}>\r\n    <h3>Edit Session {this.state.user} | {this.state.userId}</h3>\r\n    {/* <label>Client:</label>\r\n    <select required value={this.state.currentClient} onChange={this.onChangeClient}>\r\n    <option key=\"default\" value=\"default\">Pick New Client</option>\r\n    {this.state.clients.map(function(client){\r\n    return <option key={client} value={client}>\r\n    {client}\r\n    </option>\r\n    })}\r\n    </select> */}\r\n<br/>\r\n    <label>Pick New TimeFrame:</label>\r\n    <select required onChange={this.onChangeSessionLength} value={this.state.sessionLength} >\r\n    <option>Time Frame Options</option>\r\n    <option>30 Mins</option>\r\n    <option>1 Hour</option>\r\n    <option>2 Hours</option>\r\n    <option>Custom</option>\r\n    </select>\r\n<br/>\r\n    <label>New Session Date:</label>\r\n    <DatePicker\r\n    selected= {this.state.sessionDate}\r\n    onChange={this.onChangeDate}\r\n    />\r\n<br/>\r\n    <label>New Session Start Time:</label>\r\n    {/* <input type=\"text\" id=\"start\" name=\"start\" required onChange={this.onChangeStartTime}/> */}\r\n    <input type=\"time\" id=\"start\" name=\"start\" value={this.state.startTime} required onChange={this.onChangeStartTime}/>\r\n<br/>\r\n    <p> The current Client is: {this.state.currentClient}</p>\r\n<br/>\r\n    <p> The Length of the session is: {this.state.sessionLength}</p>\r\n<br/>\r\n<p>The current session start time is: {this.state.startTime}</p>\r\n{/* <p>The current date of session is {this.state.sessionDate}</p> */}\r\n\r\n<div className=\"form-group\">\r\n<input type=\"submit\" value=\"Edit Session\" className=\"btn btn-primary\"/>\r\n</div>\r\n    \r\n<br/>\r\n<br/>\r\n</form>\r\n        </div>\r\n    )\r\n}\r\n}","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n//the var session is related to the prop inside of the SessionDataList Element\r\n\r\n\r\nconst SessionDataList = props => (\r\n<tr>\r\n<td>{props.session.currentClient}</td>\r\n<td>{props.session.sessionDate.substring(0,10)}</td>\r\n<td>{props.session.startTime}</td>\r\n<td>{props.session.sessionLength}</td>\r\n<td>{props.session.sessionPaid ? \"Paid\" : \"Not Paid\" }</td>\r\n<td>\r\n    <Link className=\"btn btn-primary\" to={\"/edit/\"+props.session._id}>Edit</Link> | <a className=\"btn btn-danger\" href=\"#\" onClick = {()=> {props.deleteSession(props.session._id)}}>Delete</a> | <a className=\"btn btn-primary\" href=\"#\" onClick = {() => {props.sessionPaidUpdater(props.session._id)}}>Mark as Paid</a>\r\n</td>\r\n</tr>\r\n);\r\n\r\nexport default class SessionList extends Component {\r\n    constructor(props){\r\n    super(props);\r\n    this.state = {sessions: []}\r\n    this.sessionPaidUpdater = this.sessionPaidUpdater.bind(this)\r\n    this.deleteSession = this.deleteSession.bind(this)\r\n    }\r\n    \r\n\r\ncomponentDidMount(){\r\n    axios.get(\"http://localhost:5000/sessions/\")\r\n    .then(response => {\r\n    this.setState({sessions: response.data})\r\n    })\r\n    .catch((error) => {\r\n            console.log(error);\r\n            })    \r\n}\r\n\r\nshowSessionList(){\r\n    return this.state.sessions\r\n    .filter(user => user.user == this.props.user)\r\n    .filter(client => client.currentClient == this.props.currentClient)\r\n    .map(currentSession => {\r\n        return <SessionDataList session={currentSession} sessionPaidUpdater={this.sessionPaidUpdater} deleteSession={this.deleteSession} key={currentSession._id} />\r\n    })\r\n}\r\n\r\nsessionPaidUpdater(id){\r\n    // console.log(\"poop\")\r\n    axios.get(\"http://localhost:5000/sessions/\"+id)\r\n    .then(res => {\r\n        // console.log(res.data.currentClient);\r\n            const tempuser = res.data.user;\r\n            const tempuserId = res.data.userId;\r\n            const tempcurrentClient = res.data.currentClient;\r\n            const tempsessionLength = res.data.sessionLength;\r\n            const tempstartTime = res.data.startTime;\r\n            // const tempsessionDate = Date.parse(res.data.sessionDate);\r\n            const tempsessionDate = new Date(res.data.sessionDate)\r\n            const tempsessionPaid = res.data.sessionPaid; \r\n            // console.log(tempsessionPaid);\r\n            \r\n           \r\n                const testdata = {\r\n                  user :  tempuser,\r\n                  userId: tempuserId,\r\n                  currentClient: tempcurrentClient,\r\n                  sessionLength: tempsessionLength,\r\n                  startTime: tempstartTime,\r\n                  sessionDate: tempsessionDate,\r\n                  sessionPaid: true,  \r\n                }\r\n                console.log(testdata);\r\n                axios.post(\"http://localhost:5000/sessions/update/\"+id, testdata)\r\n                .then(window.location = \"/createSession\")\r\n            })\r\n    }\r\n\r\n    deleteSession(id){\r\n        let confirmation = window.confirm(\"Please confirm you would like to delete this sessions.\")\r\n        if (confirmation === true){\r\n            axios.delete(\"http://localhost:5000/sessions/\"+id)\r\n            .then(res => console.log(res.data));\r\n            this.setState({\r\n                sessions: this.state.sessions.filter(el => el._id !== id)\r\n            })\r\n        } else {\r\n            window.location = \"/createSession\"\r\n        }\r\n        }\r\n\r\n\r\nrender(){\r\n    return(\r\n        <div>\r\n        <h3>Hi {this.props.user} , Your Session History with {this.props.currentClient}</h3>\r\n        <table className = \"table\">\r\n            <thead className= \"thead-light\">\r\n            <tr>\r\n            <th>Client Name</th>\r\n            <th>Session Date</th>\r\n            <th>Session State Time</th>\r\n            <th>Session Length</th>\r\n            <th>Paid?</th>\r\n            <th>Actions (Edit/Delete/Mark As Paid)</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.showSessionList()}\r\n            </tbody>\r\n        </table>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n}","import React from \"react\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n// import {BrowserRouter as Router,Route,Link} from \"react-router-dom\";\r\nimport axios from \"axios\"\r\nimport SessionList from \"./session-list.compon\";\r\nimport {Link} from \"react-router-dom\"\r\n// import EditSession from \"./edit-session.compon\";\r\n\r\n\r\n\r\nexport default class  CreateSession extends React.Component {\r\n  constructor(props){\r\nsuper(props)\r\nthis.state ={\r\n  user: \"\",\r\n  userId: 0,\r\n  clients: [],\r\n  currentClient: \"\",\r\n  sessionLength: \"\",\r\n  startTime: \"\",\r\n  sessionDate: new Date(),\r\n  sessionPaid: false,\r\n  clientId: \"\",\r\n}\r\nthis.onChangeClient = this.onChangeClient.bind(this);\r\nthis.onChangeSessionLength = this.onChangeSessionLength.bind(this);\r\nthis.onChangeDate = this.onChangeDate.bind(this);\r\nthis.onChangeStartTime = this.onChangeStartTime.bind(this)\r\nthis.showSessions = this.showSessions.bind(this)\r\nthis.onSubmit = this.onSubmit.bind(this);\r\nthis.editClientLink = this.editClientLink.bind(this)\r\nthis.clientIdGrabber = this.clientIdGrabber.bind(this);\r\n\r\n\r\n  }\r\n\r\n// componentDidMount(){\r\n// axios.get(\"http://localhost:5000/clients/\")\r\n// .then(response => {\r\n//   if (response.data.length > 0){\r\n//     this.setState({\r\n//       user: this.props.testClient,\r\n//       userId: this.props.testClientID,\r\n//       clients: response.data\r\n//       .filter(clientsthatbelongtocurrentuser => clientsthatbelongtocurrentuser.userId === this.props.testClientID )\r\n//       .map(client => client.firstName + \" \" + client.lastName),\r\n//       // currentClient: response.data[0].currentClient,\r\n//       // clientId: response.data[0]._id\r\n//     })\r\n//   }\r\n// })\r\n// }\r\n\r\nasync componentDidMount() {\r\n\r\n  // Make requests\r\n  const [firstResponse, secondResponse,] = await Promise.all([\r\n    axios.get(`http://localhost:5000/users/locker`,{withCredentials: true}),\r\n    axios.get(\"http://localhost:5000/clients/\"),\r\n  ]);\r\n\r\n  // Update state once with all 3 responses\r\n  this.setState({\r\n      user: firstResponse.data.username,\r\n      userId: firstResponse.data.userid,\r\n      clients: secondResponse.data\r\n              .filter(clientsthatbelongtocurrentuser => clientsthatbelongtocurrentuser.userId === firstResponse.data.userid )\r\n                .map(client => client.firstName + \" \" + client.lastName),\r\n                currentClient: secondResponse.data[0].currentClient,\r\n        //  currentClient: secondResponse.data[0].currentClient,\r\n      clientId: secondResponse.data[0]._id\r\n  });\r\n\r\n}\r\n\r\n\r\nclientIdGrabber(){\r\naxios.get(\"http://localhost:5000/clients/\")\r\n.then(response => {\r\n  let x = response.data.filter(client => client.clientFullName == this.state.currentClient )\r\n  let y = x[0].clientFullName\r\n  // if (this.state.currentClient == response.data.filter(client => client.clientFullName == this.state.currentClient )){\r\n    // if (this.state.clientFullName == x){\r\n      if (this.state.currentClient == y){\r\n    this.setState({\r\n      clientId: x[0]._id,\r\n    \r\n    },console.log(\"poop yes\", x, y))\r\n  } else {console.log(\"poop no\");}\r\n})\r\n}\r\n\r\nonChangeClient(e){\r\n    this.setState({currentClient: e.target.value,},this.clientIdGrabber())\r\n  }\r\n  \r\n\r\nonChangeSessionLength(e){\r\nthis.setState({  \r\n    sessionLength: e.target.value\r\n  })\r\n}\r\n\r\nonChangeDate(date){\r\n  this.setState({\r\n    sessionDate: date\r\n  })\r\n}\r\n\r\nonChangeStartTime(e){\r\n  this.setState({\r\n    startTime: e.target.value\r\n  })\r\n  \r\n}\r\n\r\nshowSessions(){\r\n  if (this.state.currentClient == null){\r\n    return <p>Loading...</p>\r\n  } else  return <SessionList currentClient={this.state.currentClient} user={this.state.user} />\r\n}\r\n\r\nonSubmit(e){\r\n  e.preventDefault();\r\n// console.log(this.state.clientId);\r\n\r\n// let testDate = String(this.state.sessionDate).replace(/-/g, '\\/').replace(/T.+/, '')\r\n\r\n  const newSessionDataPackage = {\r\n    user: this.state.user,\r\n    userId: this.state.userId,\r\n    currentClient: this.state.currentClient,\r\n    sessionLength: this.state.sessionLength,\r\n    startTime: this.state.startTime,\r\n    sessionDate: new Date(this.state.sessionDate.toDateString()),\r\n    sessionPaid: this.state.sessionPaid,\r\n    // clientId: this.state.clientId\r\n  }\r\n  console.log(newSessionDataPackage);\r\n  \r\n  axios.post(\"http://localhost:5000/sessions/add\", newSessionDataPackage)\r\n  .then(alert(\"A new session has been added\"))\r\n\r\n  // .catch(alert(\"Error: 400, failed to add session\"))\r\n\r\n  window.location = \"/history\"\r\n  // this.props.history.push(\"/history\")\r\n}\r\n\r\neditClientLink(){\r\n  if (this.state.currentClient == \"\") {\r\n    return null\r\n  } else return <Link to={\"/editClient/\"+this.state.clientId}>Edit Client</Link>\r\n  // } else return <Link to={EditSession}>Edit Client</Link>\r\n}\r\n\r\n\r\n\r\n  render(){\r\n  return (\r\n\r\n<div className=\"App\">\r\n   <h1>Hello {this.state.user}</h1>\r\n   {/* <Link to=\"/create\">Create New Client</Link>\r\n   <Route path=\"/create\" exact component={CreateClient}/> */}\r\n   \r\n  \r\n<div>\r\n<form onSubmit={this.onSubmit}>\r\n    <label>Client:</label>\r\n    <select required value={this.state.currentClient} defaultValue =\"\" onChange={this.onChangeClient}>\r\n    <option key=\"default\" value=\"\" disabled  >Pick Client</option>\r\n    {this.state.clients.map(function(client){\r\n    return <option key={client} value={client} >\r\n    {client}\r\n    </option>\r\n    })}\r\n    </select>\r\n    <div>{this.editClientLink()}</div>\r\n<br/>\r\n    <label>TimeFrame:</label>\r\n    <select required onChange={this.onChangeSessionLength} >\r\n    <option>Please Pick Time Frame</option>\r\n    <option>30 Mins</option>\r\n    <option>1 Hour</option>\r\n    <option>2 Hours</option>\r\n    <option>Custom</option>\r\n    </select>\r\n<br/>\r\n    <label>Session Date:</label>\r\n    <DatePicker\r\n    selected= {this.state.sessionDate}\r\n    onChange={this.onChangeDate}\r\n    />\r\n<br/>\r\n    <label>Session Start Time:</label>\r\n    {/* <input type=\"text\" id=\"start\" name=\"start\" required onChange={this.onChangeStartTime}/> */}\r\n    <input type=\"time\" id=\"start\" name=\"start\" required onChange={this.onChangeStartTime}/>\r\n<br/>\r\n    <p> The current Client is: {this.state.currentClient}</p>\r\n<br/>\r\n<p> The current Client id is: {this.state.clientId}</p>\r\n<br/>\r\n    <p> The Length of the session is: {this.state.sessionLength}</p>\r\n<br/>\r\n<p> The Date of the session is {String(this.state.sessionDate)}</p>\r\n    <input type=\"submit\" value=\"Log Session\"/>\r\n    <button>Email Invoice</button>\r\n<br/>\r\n    <p>Your previous sessions with: {this.state.currentClient}</p>\r\n<br/>\r\n<br/>\r\n{/* {this.props.testClient} */}\r\n{ this.showSessions()}\r\n</form>\r\n  </div>\r\n</div>\r\n\r\n  );\r\n}\r\n}\r\n\r\n","import React, {Component} from \"react\";\r\nimport axios from \"axios\"\r\n\r\n\r\nexport default class CreateClient extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            user: \"\",\r\n            userId: \"\",\r\n            firstName : \"\",\r\n            lastName : \"\",\r\n            email : \"\",\r\n            number :\"\",\r\n            clientFullName: \"\",\r\n        }\r\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n        this.onChangeLastName=this.onChangeLastName.bind(this);\r\n        this.onChangeEmail=this.onChangeEmail.bind(this);\r\n        this.onChangeNumber=this.onChangeNumber.bind(this);\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(`http://localhost:5000/users/locker`,{withCredentials: true})\r\n        .then(response => {\r\n            this.setState({\r\n                // id: response.data._id,\r\n                user: response.data.username,\r\n                userId: response.data.userid,\r\n            })\r\n        })\r\n        .catch(function(error){\r\n            console.log(error);\r\n        })\r\n\r\n        // this.setState({\r\n        //     user: this.props.testClient,\r\n        //     userId: this.props.testClientID, \r\n        // })\r\n    }\r\n\r\n    onChangeFirstName(e){\r\n        this.setState({\r\n            firstName: e.target.value,\r\n            clientFullName: e.target.value + \" \" + this.state.lastName\r\n        })\r\n        // console.log(this.state.firstName);\r\n    }\r\n\r\n    onChangeLastName(e){\r\n        this.setState({\r\n        lastName: e.target.value,\r\n        clientFullName: this.state.firstName + \" \" + e.target.value   \r\n        })\r\n        // console.log(this.state.lastName);\r\n    }\r\n\r\n    onChangeEmail(e){\r\n        this.setState({\r\n            email: e.target.value\r\n        })\r\n        // console.log(this.state.email);\r\n    }\r\n\r\n    onChangeNumber(e){\r\n        this.setState({\r\n            number: e.target.value\r\n        })\r\n        // console.log(this.state.number);\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        // this.setState({clientFullName: this.state.firstName + \" \" + this.state.lastName,\r\n        // },console.log(this.state.clientFullName))\r\n\r\n        const newClientData = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            email: this.state.email,\r\n            number: this.state.number,\r\n            user: this.state.user,\r\n            userId: this.state.userId,\r\n            clientFullName: this.state.clientFullName,\r\n        }\r\n        alert(\"A new client has been added\");\r\n\r\n        console.log(this.state.clientFullName);\r\n        \r\n\r\n        axios.post(\"http://localhost:5000/clients/add\",newClientData)\r\n        .then(res => console.log(res.data))\r\n\r\n        // console.log(newClientData);\r\n\r\n        window.location = \"/history\"\r\n    }\r\n\r\nrender(){\r\n    return(\r\n<div>\r\n<h1>Create New Client | {this.state.user}, {this.state.userId}</h1>\r\n<form onSubmit={this.onSubmit}>\r\n<div className= \"form-group\">\r\n    <label>First Name</label>\r\n    <input type=\"text\"\r\n    required\r\n    className=\"form-control\"\r\n    value={this.state.firstName}\r\n    onChange={this.onChangeFirstName}\r\n    />\r\n</div>\r\n<div className= \"form-group\">\r\n    <label>Last Name</label>\r\n    <input type=\"text\"\r\n    required\r\n    className=\"form-control\"\r\n    value={this.state.lastName}\r\n    onChange={this.onChangeLastName}\r\n    />\r\n</div>\r\n<div className= \"form-group\">\r\n    <label>Email</label>\r\n    <input type=\"text\"\r\n    required\r\n    className=\"form-control\"\r\n    value={this.state.email}\r\n    onChange={this.onChangeEmail}\r\n    />\r\n</div>\r\n<div className= \"form-group\">\r\n    <label>Phone Number</label>\r\n    <input type=\"text\"\r\n    required\r\n    className=\"form-control\"\r\n    value={this.state.number}\r\n    onChange={this.onChangeNumber}\r\n    />\r\n</div>\r\n<div className=\"form-group\">\r\n    <input type=\"submit\" value=\"Create New Client\" className = \"btn btn-primary\"/>\r\n</div>\r\n</form>\r\n\r\n</div>\r\n    )\r\n}\r\n\r\n\r\n}\r\n","import React, { Component }  from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\"\r\n\r\n\r\nexport default class Navbar extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      user: \"\",\r\n    }\r\n  }\r\n\r\n  \r\n// async componentDidMount() {\r\n\r\n//   // Make requests\r\n//   const [firstResponse] = await Promise.all([\r\n//     axios.get(`http://localhost:5000/users/locker`,{withCredentials: true}),\r\n    \r\n//   ]);\r\n// this.setState({\r\n//   user: firstResponse.data.username\r\n// })\r\n// }\r\n\r\n// componentDidMount(){\r\n//   axios.get(`http://localhost:5000/users/locker`,{withCredentials: true})\r\n//   .then(response => {\r\n//       this.setState({\r\n//           // id: response.data._id,\r\n//           user: response.data.username,\r\n//       })\r\n//   })\r\n//   .catch(function(error){\r\n//       console.log(error);\r\n//   })\r\n// }\r\n\r\n   loggedoutnow = () =>{\r\n    axios.get(\"http://localhost:5000/users/logout\",  { withCredentials: true })\r\n    .then(alert(\"You have logged out. \"))\r\n    .then(window.location = \"/tutorhelper\")\r\n    \r\n  }\r\n\r\n\r\n  //this was the stuff I was using to try and hide the log out button when logged out Dont erase this section\r\n//   checkloggedin(){\r\n// axios.get(`http://localhost:5000/users/locker`, {withCredentials:true})\r\n// .then(response => {\r\n//   console.log(response.data.username);\r\n//   if (response.data.username){\r\n//     console.log(\"the button should pop up\");\r\n//      <button onClick={this.loggedoutnow}  className=\"btn btn-danger dng\">Log Out</button>\r\n//   } else {\r\n//     console.log(\"no one is logged in\")\r\n//   }\r\n// }).catch(error => {\r\n//   console.log(\"check loggin error\", error);\r\n// })\r\n// }\r\n\r\n// componentDidMount(){\r\n//   this.checkloggedin()\r\n// }\r\n\r\n\r\n\r\n\r\n  \r\n\r\nrender(){\r\n    return(\r\n  <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n  {/* <Link to=\"/\" className=\"navbar-brand\">HomePage</Link> */}\r\n  <div className=\"collpase navbar-collapse\">\r\n  <ul className=\"navbar-nav mr-auto\">\r\n    <li className=\"navbar-item\">\r\n    <Link to=\"/history\" className=\"navbar-brand\">Client History</Link>\r\n    </li>\r\n    <li className=\"navbar-item\">\r\n    <Link to=\"/createSession\" className=\"nav-link\">Create Session</Link>\r\n    </li>\r\n    <li className=\"navbar-item\">\r\n    <Link to=\"/CreateUser\" className=\"nav-link\">Create New Client</Link>\r\n   {/* { this.checkloggedin === true  ? <button onClick={this.loggedoutnow}  className=\"btn btn-danger dng\">Log Out</button>: null} */}\r\n   {/* {this.checkloggedin} */}\r\n   </li>\r\n   <li className=\"navbar-item\">\r\n   <a href=\"mailto:storres865@gmail.com\" className =\"nav-link\" >Contact us</a>\r\n    </li>\r\n   <li className=\"navbar-item\">\r\n   <Link to=\"#\" className =\"nav-link\" onClick ={this.loggedoutnow}>Log Out</Link>\r\n    </li>\r\n  </ul>\r\n  </div>\r\n</nav>\r\n    );\r\n  }\r\n}\r\n\r\n// function Navbar(){\r\n\r\n\r\n  \r\n//    const loggedoutnow = () =>{\r\n//     axios.get(\"http://localhost:5000/users/logout\",  { withCredentials: true })\r\n//     .then(alert(\"You have logged out. \"))\r\n//     window.location = \"/\"\r\n//   }\r\n  \r\n\r\n  \r\n//       return(\r\n//              <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n//           {/* <Link to=\"/\" className=\"navbar-brand\">HomePage</Link> */}\r\n//           <div className=\"collpase navbar-collapse\">\r\n//           <ul className=\"navbar-nav mr-auto\">\r\n//             <li className=\"navbar-item\">\r\n//             <Link to=\"/history\" className=\"navbar-brand\">Client History</Link>\r\n//             </li>\r\n//             <li className=\"navbar-item\">\r\n//             <Link to=\"/createSession\" className=\"nav-link\">Create Session</Link>\r\n//             </li>\r\n//             <li className=\"navbar-item\">\r\n//             <Link to=\"/CreateUser\" className=\"nav-link\">Create New Client</Link>\r\n//            <button onClick={loggedoutnow}  className=\"btn btn-danger dng\">Log Out</button>\r\n//             </li>\r\n//           </ul>\r\n//           </div>\r\n//         </nav>\r\n//       );\r\n//     }\r\n\r\n//     export default Navbar\r\n  ","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst SessionDataList = props => (\r\n<tr>\r\n<td>{props.session.currentClient}</td>\r\n<td>{props.session.sessionDate.substring(0,10)}</td>\r\n<td>{props.session.startTime}</td>\r\n<td>{props.session.sessionLength}</td>\r\n<td>{props.session.sessionPaid ? \"Paid\" : \"Not Paid\" }</td>\r\n<td>\r\n    <Link className=\"btn btn-primary\" to={\"/edit/\"+props.session._id}>Edit</Link> | <a className=\"btn btn-danger\" href=\"#\" onClick = {()=> {props.deleteSession(props.session._id)}}>Delete</a> | <a className=\"btn btn-primary\" href=\"#\" onClick = {() => {props.sessionPaidUpdater(props.session._id)}}>Mark as Paid</a>\r\n</td>\r\n</tr>\r\n);\r\n\r\nexport default class ClientHistory extends Component {\r\n    constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        sessions: [],\r\n        clients: [],\r\n        user: \"\",\r\n        userId: 0,\r\n        currentClient: \"\",\r\n    }\r\n    this.onChangeClient = this.onChangeClient.bind(this)\r\n    this.deleteSession = this.deleteSession.bind(this)\r\n    this.sessionPaidUpdater = this.sessionPaidUpdater.bind(this)\r\n    // this.testerfunction = this.testerfunction.bind(this);\r\n    }\r\n    \r\n\r\n// componentDidMount(){\r\n//     axios.get(\"http://localhost:5000/users/locker\", {withCredentials: true})\r\n// .then(response => {\r\n//     console.log(response);\r\n//     this.setState({\r\n//       user: response.data.username,\r\n//       userId: response.data.userid,\r\n//     })\r\n\r\n//     axios.get(\"http://localhost:5000/clients/\")\r\n// .then(response => {\r\n//     console.log(\"set clients ran\")\r\n//     console.log(response)\r\n//     this.setState({\r\n//       clients: response.data\r\n//     .filter(clientsthatbelongtocurrentuser => clientsthatbelongtocurrentuser.userId === this.props.testClientID )\r\n//       .map(client => client.firstName + \" \" + client.lastName),\r\n//       currentClient: response.data[0].currentClient\r\n//     })\r\n// })\r\n\r\n//     axios.get(\"http://localhost:5000/sessions/\")\r\n//     .then(response => {\r\n//         console.log(\"set sessions ran\")\r\n//     this.setState({sessions: response.data})\r\n//     })\r\n//     .catch((error) => {\r\n//             console.log(error);\r\n//             }) \r\n// })\r\n// }\r\n\r\n\r\n\r\nasync componentDidMount() {\r\n\r\n    // Make requests\r\n    const [firstResponse, secondResponse, thirdResponse] = await Promise.all([\r\n      axios.get(`http://localhost:5000/users/locker`,{withCredentials: true}),\r\n      axios.get(\"http://localhost:5000/clients/\"),\r\n      axios.get(\"http://localhost:5000/sessions/\")\r\n    ]);\r\n  \r\n    // Update state once with all 3 responses\r\n    this.setState({\r\n        user: firstResponse.data.username,\r\n        userId: firstResponse.data.userid,\r\n        clients: secondResponse.data\r\n                .filter(clientsthatbelongtocurrentuser => clientsthatbelongtocurrentuser.userId === firstResponse.data.userid )\r\n                  .map(client => client.firstName + \" \" + client.lastName),\r\n                  currentClient: secondResponse.data[0].currentClient,\r\n        sessions: thirdResponse.data\r\n    });\r\n  \r\n  }\r\n\r\nonChangeClient(e){\r\n    this.setState({\r\n      currentClient: e.target.value,\r\n    })\r\n  }\r\n\r\nshowSessionList(){\r\n    return this.state.sessions\r\n    .filter(user => user.user === this.state.user)\r\n    .filter(client => client.currentClient === this.state.currentClient)\r\n    .map(currentSession => {\r\n        return <SessionDataList session={currentSession} deleteSession={this.deleteSession} sessionPaidUpdater={this.sessionPaidUpdater}  key={currentSession._id} />\r\n    })\r\n}\r\n\r\n\r\n\r\ndeleteSession(id){\r\nlet confirmation = window.confirm(\"Please confirm you would like to delete this sessions.\")\r\nif (confirmation === true){\r\n    axios.delete(\"http://localhost:5000/sessions/\"+id)\r\n    .then(res => console.log(res.data));\r\n    this.setState({\r\n        sessions: this.state.sessions.filter(el => el._id !== id)\r\n    })\r\n} else {\r\n    window.location = \"/\"\r\n}\r\n}\r\n\r\nsessionPaidUpdater(id){\r\n// console.log(\"poop\")\r\naxios.get(\"http://localhost:5000/sessions/\"+id)\r\n.then(res => {\r\n    // console.log(res.data.currentClient);\r\n        const tempuser = res.data.user;\r\n        const tempuserId = res.data.userId;\r\n        const tempcurrentClient = res.data.currentClient;\r\n        const tempsessionLength = res.data.sessionLength;\r\n        const tempstartTime = res.data.startTime;\r\n        // const tempsessionDate = Date.parse(res.data.sessionDate);\r\n        const tempsessionDate = new Date(res.data.sessionDate)\r\n        const tempsessionPaid = res.data.sessionPaid; \r\n        // console.log(tempsessionPaid);\r\n        \r\n       \r\n            const testdata = {\r\n              user :  tempuser,\r\n              userId: tempuserId,\r\n              currentClient: tempcurrentClient,\r\n              sessionLength: tempsessionLength,\r\n              startTime: tempstartTime,\r\n              sessionDate: tempsessionDate,\r\n              sessionPaid: true,  \r\n            }\r\n            console.log(testdata);\r\n            axios.post(\"http://localhost:5000/sessions/update/\"+id, testdata)\r\n            .then(window.location = \"/history\")\r\n        })\r\n}\r\n\r\n\r\nrender(){\r\n    return(\r\n        <div>\r\n        <h3>Hi {this.state.user} | {this.state.userId}  , Your Session History with {this.state.currentClient}</h3>\r\n        <label>Pick Client</label>\r\n        <select required value={this.state.currentClient} onChange={this.onChangeClient}>\r\n    <option key=\"default\" value=\"default\">Pick Client</option>\r\n    {this.state.clients.map(function(client){\r\n    return <option key={client} value={client}>\r\n    {client}\r\n    </option>\r\n    })}\r\n    </select>\r\n        <table className = \"table\">\r\n            <thead className= \"thead-light\">\r\n            <tr>\r\n            <th>Client Name</th>\r\n            <th>Session Date</th>\r\n            <th>Session State Time</th>\r\n            <th>Session Length</th>\r\n            <th>Paid?</th>\r\n            <th>Actions (Edit/Delete/Mark As Paid)</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.showSessionList()}\r\n            </tbody>\r\n        </table>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n}","import React, {Component} from \"react\";\r\nimport axios from \"axios\"\r\n\r\nexport default class EditClient extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            clients: [],\r\n            usesrId: \"\",\r\n            firstName : \"\",\r\n            lastName : \"\",\r\n            email : \"\",\r\n            number :\"\",\r\n            currentClient: \"\",\r\n            clientId: \"\",\r\n            user:\"\",\r\n            clientFullName: \"\",\r\n        }\r\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n        this.onChangeLastName=this.onChangeLastName.bind(this);\r\n        this.onChangeEmail=this.onChangeEmail.bind(this);\r\n        this.onChangeNumber=this.onChangeNumber.bind(this);\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n        this.onChangeClient = this.onChangeClient.bind(this);\r\n        this.deleteClient = this.deleteClient.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(\"http://localhost:5000/clients/\" +this.props.match.params.id)\r\n        .then(response => {\r\n            this.setState({\r\n                // id: response.data._id,\r\n                user: response.data.username,\r\n                userId: response.data.userid,\r\n                firstName: response.data.firstName,\r\n                lastName: response.data.lastName,\r\n                email: response.data.email,\r\n                number: response.data.number,\r\n                clientFullName: response.data.firstName + \" \" + response.data.lastName\r\n            })\r\n        })\r\n        .catch(function(error){\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n\r\nonChangeFirstName(e){\r\n    this.setState({\r\n        firstName: e.target.value,\r\n        clientFullName: e.target.value + \" \" + this.state.lastName\r\n    })\r\n    // console.log(this.state.firstName);\r\n}\r\n\r\n    onChangeLastName(e){\r\n        this.setState({\r\n        lastName: e.target.value,\r\n        clientFullName: this.state.firstName + \" \" + e.target.value   \r\n        })\r\n        // console.log(this.state.lastName);\r\n    }\r\n\r\n    onChangeEmail(e){\r\n        this.setState({\r\n            email: e.target.value\r\n        })\r\n        // console.log(this.state.email);\r\n    }\r\n\r\n    onChangeNumber(e){\r\n        this.setState({\r\n            number: e.target.value\r\n        })\r\n        // console.log(this.state.number);\r\n    }\r\n\r\n    onChangeClient(e){\r\n            this.setState({\r\n                currentClient: e.target.value,\r\n         })\r\n      }\r\n\r\n      deleteClient(id){\r\n          console.log(\"delete client ran\");\r\n          let confirmation = window.confirm(\"Please confirm that you would like to delete this client\")\r\n          if (confirmation === true){\r\n              axios.delete(\"http://localhost:5000/clients/\"+id)\r\n              .then(res => console.log(res.data));\r\n              window.location = \"/\"\r\n            \r\n          } else {\r\n              window.location = \"/editClient/\"+this.props.match.params.id\r\n          }\r\n      }\r\n\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        \r\n        const newClientData = {\r\n            user: this.state.user,\r\n            userID: this.state.userID,\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            email: this.state.email,\r\n            number: this.state.number,\r\n            userId: this.state.userId,\r\n            clientFullName: this.state.clientFullName,\r\n        }\r\n       \r\n        let confirmation = window.confirm(\"Please confirm that you would like to update this client\")\r\n\r\n        if (confirmation === true){\r\n            axios.post(\"http://localhost:5000/clients/update/\"+this.props.match.params.id,newClientData)\r\n            // .then(this.props.history.push(\"/history\"))\r\n            .then(window.location=\"/history\")\r\n        } else {\r\n            // window.location = \"/editClient/\"+this.props.match.params.id\r\n            this.props.history.push(\"/editClient/\"+this.props.match.params.id)\r\n        }\r\n\r\n        \r\n        // .catch(error => alert(\"Failed to update client\" + error))\r\n        \r\n\r\n        // console.log(newClientData);\r\n        // console.log(this.props.match.params.id);\r\n\r\n        \r\n    }\r\n\r\n\r\nrender(){\r\n    return(\r\n        <div>\r\n<h1>Edit Client</h1>\r\n<form onSubmit={this.onSubmit}>\r\n{/* <label>Pick Client:</label>\r\n    <select required value={this.state.currentClient} onChange={this.onChangeClient}>\r\n    <option key=\"default\" value=\"default\">Pick Client</option>\r\n    {this.state.clients.map(function(client){\r\n    return <option key={client} value={client}>\r\n    {client}\r\n    </option>\r\n    })}\r\n    </select> */}\r\n\r\n<div className= \"form-group\">\r\n    <label>First Name</label>\r\n    <input type=\"text\"\r\n    required\r\n    className=\"form-control\"\r\n    value={this.state.firstName}\r\n    onChange={this.onChangeFirstName}\r\n    />\r\n</div>\r\n<div className= \"form-group\">\r\n    <label>Last Name</label>\r\n    <input type=\"text\"\r\n    required\r\n    className=\"form-control\"\r\n    value={this.state.lastName}\r\n    onChange={this.onChangeLastName}\r\n    />\r\n</div>\r\n<div className= \"form-group\">\r\n    <label>Email</label>\r\n    <input type=\"text\"\r\n    required\r\n    className=\"form-control\"\r\n    value={this.state.email}\r\n    onChange={this.onChangeEmail}\r\n    />\r\n</div>\r\n<div className= \"form-group\">\r\n    <label>Phone Number</label>\r\n    <input type=\"text\"\r\n    required\r\n    className=\"form-control\"\r\n    value={this.state.number}\r\n    onChange={this.onChangeNumber}\r\n    />\r\n</div>\r\n<div className=\"form-group\">\r\n    <input type=\"submit\" value=\"Edit Client\" className = \"btn btn-primary\"/>\r\n    <input type=\"button\" onClick={() => this.deleteClient(this.props.match.params.id)} value=\"Delete Client\" className = \"btn btn-danger\"/>\r\n</div>\r\n</form>\r\n{this.state._id}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n}","import React, {useState} from \"react\"\r\nimport axios from \"axios\"\r\n\r\nfunction LoginPage({currentUserUpdater}){\r\n    const [registerUsername, setRegisterUsername] = useState(\"\")\r\n    const [regiserPassword, setRegisterPassword] = useState(\"\");\r\n    const [loginUsername, setLoginUsername] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n    const [info, setData] = useState(null);\r\n  \r\n  \r\n  //  function testRunner(callback1,callback2){\r\n    // login()\r\n  //  callback1();\r\n  //  callback2();\r\n  \r\n   //dont turn this on if you turn testrunner back on..just notes \r\n    //  if (info){\r\n    //   alert(`Welcome back ${info.username}`)\r\n    //   // alert(\"Welcome back!\")\r\n    //   setTimeout(function(){\r\n      \r\n    //     window.location = \"/history\"\r\n    //   },3000)\r\n    //  } else {\r\n    //    alert(\"Wrong Username or password\")\r\n    //  }\r\n  // }\r\n  \r\n  \r\n  const register = () => {\r\n  const userData = {\r\n     username: registerUsername,\r\n     password: regiserPassword,\r\n     userid: Number(Math.round((Math.random() * (10000 -1)+ 1) ))\r\n  \r\n  }\r\n  axios.post(\"http://localhost:5000/users/add\", userData, {withCredentials: true})\r\n  //  .then(res => console.log(res.data))\r\n  .then(alert(\"Thank you for joining!\"))\r\n  window.location =\"/createSession\"\r\n  }\r\n  \r\n  async function promised(){\r\n    try {\r\n   const l = await login();\r\n   const g = await getUser().then(() => {\r\n     window.location = \"/history\"\r\n   });\r\n    } catch (err){\r\n      console.log(err);\r\n    }\r\n  }\r\n  \r\n  function login(){\r\n    return new Promise((resolve,reject) => {\r\n        let data = {\r\n        username: loginUsername,\r\n        password: loginPassword\r\n        }\r\n        resolve(\r\n      axios.post(\"http://localhost:5000/users/login\", data, {withCredentials: true})\r\n    .then((res) => console.log(res))\r\n        )\r\n        reject(console.log(\"login promise did not work\"))\r\n    })\r\n  }\r\n  \r\n  function getUser(){\r\n    return new Promise((resolve,reject) => {\r\n      axios.get(\"http://localhost:5000/users/locker\", {withCredentials: true} )\r\n      .then((res) => {\r\n        if (res.data.username){\r\n          resolve(\r\n            setData(res.data)\r\n            // alert(`Welcome back ${res.data.username}`)\r\n                // window.location = \"/history\"\r\n          )\r\n        } else {\r\n          // reject(\"the get user promise failed\")\r\n          reject(alert(\"Wrong Username or Password\"))\r\n        }\r\n      })\r\n    })\r\n  }\r\n  \r\n  // function showPW(){\r\n  //   let pwfield = document.getElementById(\"pw\").type;\r\n  //   console.log(pwfield);\r\n  //   if (pwfield == \"password\"){\r\n  //     pwfield === \"text\"\r\n  //   } else {\r\n  //     pwfield === \"password\"\r\n  //   }\r\n  // }\r\n  \r\n  \r\n  \r\n  \r\n  //old login that works but without promise\r\n  // const login = () => {\r\n  //   let data = {\r\n  //       username: loginUsername,\r\n  //       password: loginPassword\r\n   \r\n  //   }\r\n  //   axios.post(\"http://localhost:5000/users/login\", data, {withCredentials: true})\r\n  //   .then((res) => console.log(res))\r\n  // }\r\n  \r\n  //old getuser that works but without promise\r\n  // const getUser = () => {\r\n  //   axios.get(\"http://localhost:5000/users/locker\", {withCredentials: true} )\r\n  //   .then((res) => {\r\n  //     if (res.data.username){\r\n  //       console.log(res);\r\n  //       setData(res.data);\r\n  //         alert(`Welcome back ${res.data.username}`)\r\n  //             window.location = \"/history\"\r\n  //     } else {\r\n  //          alert(\"Wrong Username or password\")\r\n  //     }\r\n      \r\n  //   })\r\n  // }\r\n  \r\n  \r\n  \r\n    return(\r\n        <div>\r\n            <h1>Hello! Welcome to tutor helper2!</h1>\r\n            <p>Tutor helper allows you to quickly and easily save all of your tutoring sessions. With a few clicks you will be able to log all sessions and quickly send over the invoice for payment.</p>\r\n            <h1>Login</h1>\r\n            <input placeholder=\"username please\" onChange={e => setLoginUsername(e.target.value)} />\r\n            <input type = \"password\" placeholder = \"password please\" onChange={e => setLoginPassword(e.target.value)} />\r\n            {/* <input type=\"submit\" onClick={() => testRunner(login,getUser)}/> */}\r\n            <input type=\"submit\" onClick={promised}/>\r\n           \r\n            <br></br>\r\n            <br></br>\r\n            <h1>Create a free account</h1>\r\n            <input placeholder=\"username please\" onChange={e => setRegisterUsername(e.target.value)} />\r\n            <br/>\r\n            <input type=\"password\" id=\"pw\" placeholder = \"password please\" onChange={e => setRegisterPassword(e.target.value)} />\r\n            {/* <input type=\"checkbox\" onClick={showPW}/> Show Password */}\r\n            <br/>\r\n            {/* <input placeholder = \"first name please\" /> */}\r\n        <br/>\r\n            <input type=\"submit\" onClick={register}/>\r\n            <p>Your chosen Username is : {registerUsername}</p>\r\n            <p>Your chosen Password is :{regiserPassword}</p>\r\n            {info ? <h1>Hello {info.username}, {info.userid}</h1> : \"\"}\r\n        </div>\r\n    )\r\n  \r\n  }\r\n\r\nexport default LoginPage","import React, {useState} from \"react\"\nimport axios from \"axios\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {BrowserRouter as Router,Route} from \"react-router-dom\";\n// import Navbar from \"./components/navbar.component\";\n\nimport './App.css';\n\nimport EditSession from './compon/edit-session.compon';\nimport CreateSession from \"./compon/create-session.compon\";\nimport CreateClient from './compon/create-client.compon';\nimport Navbar from './compon/navbar.compon';\nimport ClientHistory from './compon/client-history.compon'\nimport EditClient from \"./compon/edit-client.compon\"\nimport LoginPage from \"./compon/login\"\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      currentUser: \"\",\n    currentUserID: 0}\n    this.currentUserUpdater = this.currentUserUpdater.bind(this)\n  }\n\n\ncurrentUserUpdater(username,id){\n  this.setState({\n    currentUser: username,\n    currentUserID: id,\n  })\n  console.log(this.state.currentUser);\n}\n\nrender(){\n  return (\n  <Router>\n    <div className=\"container\">\n    <Navbar />\n    <br/>\n    {/* <Route exact path=\"/\" exact component ={LoginPage2} /> */}\n    <Route\n  exact path='/tutorhelper'\n  render={(props) => (\n    // <CreateSession {...props} testClient={0>2 ?  \"Brian\": \"Tom\" } />\n    <LoginPage {...props} currentUserUpdater={this.currentUserUpdater} />\n  )}\n/>\n    {/* <Route exact path=\"/history\" exact component={ClientHistory} /> */}\n    <Route\n  exact path='/history'\n  render={(props) => (\n    // <CreateSession {...props} testClient={0>2 ?  \"Brian\": \"Tom\" } />\n    <ClientHistory {...props} testClient={this.state.currentUser} testClientID={this.state.currentUserID}  />\n  )}\n/>\n    {/* <Route path=\"/edit/:id\" exact component={EditSession} /> */}\n    <Route\n  path='/edit/:id'\n  render={(props) => (\n    <EditSession {...props} testClient={this.state.currentUser} testClientID={this.state.currentUserID} />\n  )}\n/>\n    {/* <Route path=\"/createSession\" component={CreateSession} /> */}\n    <Route\n  path='/createSession'\n  render={(props) => (\n    <CreateSession {...props} testClient={this.state.currentUser} testClientID={this.state.currentUserID} />\n  )}\n/>\n    {/* <Route path=\"/createUser\" component={CreateClient} /> */}\n    <Route\n  path='/createUser'\n  render={(props) => (\n    <CreateClient {...props} testClient={this.state.currentUser} testClientID={this.state.currentUserID} />\n  )}\n/>\n    {/* <Route path=\"/editClient/:id\" exact component={EditClient} /> */}\n    <Route\n  path='/editClient/:id'\n  render={(props) => (\n    <EditClient {...props} testClient={this.state.currentUser} testClientID={this.state.currentUserID} />\n  )}\n/>\n    </div>\n  </Router>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}