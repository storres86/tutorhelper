[{"C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\App.js":"1","C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\compon\\create-client.compon.js":"2","C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\index.js":"3","C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\compon\\session-list.compon.js":"4","C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\compon\\edit-session.compon.js":"5","C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\compon\\create-session.compon.js":"6","C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\compon\\navbar.compon.js":"7","C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\compon\\client-history.compon.js":"8","C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\compon\\edit-client.compon.js":"9","C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\reportWebVitals.js":"10","C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\compon\\login.js":"11"},{"size":7172,"mtime":1611814254716,"results":"12","hashOfConfig":"13"},{"size":4019,"mtime":1610691148658,"results":"14","hashOfConfig":"13"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":4133,"mtime":1610410022385,"results":"16","hashOfConfig":"13"},{"size":4448,"mtime":1611120504427,"results":"17","hashOfConfig":"13"},{"size":6641,"mtime":1611120634221,"results":"18","hashOfConfig":"13"},{"size":3995,"mtime":1611812910694,"results":"19","hashOfConfig":"13"},{"size":6185,"mtime":1611120504457,"results":"20","hashOfConfig":"13"},{"size":5723,"mtime":1611120504457,"results":"21","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"13"},{"size":2705,"mtime":1609829437160,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19qrlg5",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\App.js",["48","49"],"C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\compon\\create-client.compon.js",[],"C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\index.js",[],"C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\compon\\session-list.compon.js",["50","51","52","53","54"],"import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n//the var session is related to the prop inside of the SessionDataList Element\r\n\r\n\r\nconst SessionDataList = props => (\r\n<tr>\r\n<td>{props.session.currentClient}</td>\r\n<td>{props.session.sessionDate.substring(0,10)}</td>\r\n<td>{props.session.startTime}</td>\r\n<td>{props.session.sessionLength}</td>\r\n<td>{props.session.sessionPaid ? \"Paid\" : \"Not Paid\" }</td>\r\n<td>\r\n    <Link className=\"btn btn-primary\" to={\"/edit/\"+props.session._id}>Edit</Link> | <a className=\"btn btn-danger\" href=\"#\" onClick = {()=> {props.deleteSession(props.session._id)}}>Delete</a> | <a className=\"btn btn-primary\" href=\"#\" onClick = {() => {props.sessionPaidUpdater(props.session._id)}}>Mark as Paid</a>\r\n</td>\r\n</tr>\r\n);\r\n\r\nexport default class SessionList extends Component {\r\n    constructor(props){\r\n    super(props);\r\n    this.state = {sessions: []}\r\n    this.sessionPaidUpdater = this.sessionPaidUpdater.bind(this)\r\n    this.deleteSession = this.deleteSession.bind(this)\r\n    }\r\n    \r\n\r\ncomponentDidMount(){\r\n    axios.get(\"http://localhost:5000/sessions/\")\r\n    .then(response => {\r\n    this.setState({sessions: response.data})\r\n    })\r\n    .catch((error) => {\r\n            console.log(error);\r\n            })    \r\n}\r\n\r\nshowSessionList(){\r\n    return this.state.sessions\r\n    .filter(user => user.user == this.props.user)\r\n    .filter(client => client.currentClient == this.props.currentClient)\r\n    .map(currentSession => {\r\n        return <SessionDataList session={currentSession} sessionPaidUpdater={this.sessionPaidUpdater} deleteSession={this.deleteSession} key={currentSession._id} />\r\n    })\r\n}\r\n\r\nsessionPaidUpdater(id){\r\n    // console.log(\"poop\")\r\n    axios.get(\"http://localhost:5000/sessions/\"+id)\r\n    .then(res => {\r\n        // console.log(res.data.currentClient);\r\n            const tempuser = res.data.user;\r\n            const tempuserId = res.data.userId;\r\n            const tempcurrentClient = res.data.currentClient;\r\n            const tempsessionLength = res.data.sessionLength;\r\n            const tempstartTime = res.data.startTime;\r\n            // const tempsessionDate = Date.parse(res.data.sessionDate);\r\n            const tempsessionDate = new Date(res.data.sessionDate)\r\n            const tempsessionPaid = res.data.sessionPaid; \r\n            // console.log(tempsessionPaid);\r\n            \r\n           \r\n                const testdata = {\r\n                  user :  tempuser,\r\n                  userId: tempuserId,\r\n                  currentClient: tempcurrentClient,\r\n                  sessionLength: tempsessionLength,\r\n                  startTime: tempstartTime,\r\n                  sessionDate: tempsessionDate,\r\n                  sessionPaid: true,  \r\n                }\r\n                console.log(testdata);\r\n                axios.post(\"http://localhost:5000/sessions/update/\"+id, testdata)\r\n                .then(window.location = \"/createSession\")\r\n            })\r\n    }\r\n\r\n    deleteSession(id){\r\n        let confirmation = window.confirm(\"Please confirm you would like to delete this sessions.\")\r\n        if (confirmation === true){\r\n            axios.delete(\"http://localhost:5000/sessions/\"+id)\r\n            .then(res => console.log(res.data));\r\n            this.setState({\r\n                sessions: this.state.sessions.filter(el => el._id !== id)\r\n            })\r\n        } else {\r\n            window.location = \"/createSession\"\r\n        }\r\n        }\r\n\r\n\r\nrender(){\r\n    return(\r\n        <div>\r\n        <h3>Hi {this.props.user} , Your Session History with {this.props.currentClient}</h3>\r\n        <table className = \"table\">\r\n            <thead className= \"thead-light\">\r\n            <tr>\r\n            <th>Client Name</th>\r\n            <th>Session Date</th>\r\n            <th>Session State Time</th>\r\n            <th>Session Length</th>\r\n            <th>Paid?</th>\r\n            <th>Actions (Edit/Delete/Mark As Paid)</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.showSessionList()}\r\n            </tbody>\r\n        </table>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n}","C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\compon\\edit-session.compon.js",[],"C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\compon\\create-session.compon.js",["55","56","57"],"C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\compon\\navbar.compon.js",[],"C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\compon\\client-history.compon.js",["58","59"],"import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst SessionDataList = props => (\r\n<tr>\r\n<td>{props.session.currentClient}</td>\r\n<td>{props.session.sessionDate.substring(0,10)}</td>\r\n<td>{props.session.startTime}</td>\r\n<td>{props.session.sessionLength}</td>\r\n<td>{props.session.sessionPaid ? \"Paid\" : \"Not Paid\" }</td>\r\n<td>\r\n    <Link className=\"btn btn-primary\" to={\"/edit/\"+props.session._id}>Edit</Link> | <a className=\"btn btn-danger\" href=\"#\" onClick = {()=> {props.deleteSession(props.session._id)}}>Delete</a> | <a className=\"btn btn-primary\" href=\"#\" onClick = {() => {props.sessionPaidUpdater(props.session._id)}}>Mark as Paid</a>\r\n</td>\r\n</tr>\r\n);\r\n\r\nexport default class ClientHistory extends Component {\r\n    constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        sessions: [],\r\n        clients: [],\r\n        user: \"\",\r\n        userId: 0,\r\n        currentClient: \"\",\r\n    }\r\n    this.onChangeClient = this.onChangeClient.bind(this)\r\n    this.deleteSession = this.deleteSession.bind(this)\r\n    this.sessionPaidUpdater = this.sessionPaidUpdater.bind(this)\r\n    // this.testerfunction = this.testerfunction.bind(this);\r\n    }\r\n    \r\n\r\n// componentDidMount(){\r\n//     axios.get(\"http://localhost:5000/users/locker\", {withCredentials: true})\r\n// .then(response => {\r\n//     console.log(response);\r\n//     this.setState({\r\n//       user: response.data.username,\r\n//       userId: response.data.userid,\r\n//     })\r\n\r\n//     axios.get(\"http://localhost:5000/clients/\")\r\n// .then(response => {\r\n//     console.log(\"set clients ran\")\r\n//     console.log(response)\r\n//     this.setState({\r\n//       clients: response.data\r\n//     .filter(clientsthatbelongtocurrentuser => clientsthatbelongtocurrentuser.userId === this.props.testClientID )\r\n//       .map(client => client.firstName + \" \" + client.lastName),\r\n//       currentClient: response.data[0].currentClient\r\n//     })\r\n// })\r\n\r\n//     axios.get(\"http://localhost:5000/sessions/\")\r\n//     .then(response => {\r\n//         console.log(\"set sessions ran\")\r\n//     this.setState({sessions: response.data})\r\n//     })\r\n//     .catch((error) => {\r\n//             console.log(error);\r\n//             }) \r\n// })\r\n// }\r\n\r\n\r\n\r\nasync componentDidMount() {\r\n\r\n    // Make requests\r\n    const [firstResponse, secondResponse, thirdResponse] = await Promise.all([\r\n      axios.get(`http://localhost:5000/users/locker`,{withCredentials: true}),\r\n      axios.get(\"http://localhost:5000/clients/\"),\r\n      axios.get(\"http://localhost:5000/sessions/\")\r\n    ]);\r\n  \r\n    // Update state once with all 3 responses\r\n    this.setState({\r\n        user: firstResponse.data.username,\r\n        userId: firstResponse.data.userid,\r\n        clients: secondResponse.data\r\n                .filter(clientsthatbelongtocurrentuser => clientsthatbelongtocurrentuser.userId === firstResponse.data.userid )\r\n                  .map(client => client.firstName + \" \" + client.lastName),\r\n                  currentClient: secondResponse.data[0].currentClient,\r\n        sessions: thirdResponse.data\r\n    });\r\n  \r\n  }\r\n\r\nonChangeClient(e){\r\n    this.setState({\r\n      currentClient: e.target.value,\r\n    })\r\n  }\r\n\r\nshowSessionList(){\r\n    return this.state.sessions\r\n    .filter(user => user.user === this.state.user)\r\n    .filter(client => client.currentClient === this.state.currentClient)\r\n    .map(currentSession => {\r\n        return <SessionDataList session={currentSession} deleteSession={this.deleteSession} sessionPaidUpdater={this.sessionPaidUpdater}  key={currentSession._id} />\r\n    })\r\n}\r\n\r\n\r\n\r\ndeleteSession(id){\r\nlet confirmation = window.confirm(\"Please confirm you would like to delete this sessions.\")\r\nif (confirmation === true){\r\n    axios.delete(\"http://localhost:5000/sessions/\"+id)\r\n    .then(res => console.log(res.data));\r\n    this.setState({\r\n        sessions: this.state.sessions.filter(el => el._id !== id)\r\n    })\r\n} else {\r\n    window.location = \"/\"\r\n}\r\n}\r\n\r\nsessionPaidUpdater(id){\r\n// console.log(\"poop\")\r\naxios.get(\"http://localhost:5000/sessions/\"+id)\r\n.then(res => {\r\n    // console.log(res.data.currentClient);\r\n        const tempuser = this.props.testClient;\r\n        const tempuserId = this.props.testClientID\r\n        const tempcurrentClient = res.data.currentClient;\r\n        const tempsessionLength = res.data.sessionLength;\r\n        const tempstartTime = res.data.startTime;\r\n        // const tempsessionDate = Date.parse(res.data.sessionDate);\r\n        const tempsessionDate = new Date(res.data.sessionDate)\r\n        // const tempsessionPaid = res.data.sessionPaid; \r\n        // console.log(tempsessionPaid);\r\n        \r\n       \r\n            const testdata = {\r\n              user :  tempuser,\r\n              userId: tempuserId,\r\n              currentClient: tempcurrentClient,\r\n              sessionLength: tempsessionLength,\r\n              startTime: tempstartTime,\r\n              sessionDate: tempsessionDate,\r\n              sessionPaid: true,  \r\n            }\r\n            console.log(testdata);\r\n            axios.post(\"http://localhost:5000/sessions/update/\"+id, testdata)\r\n            .then(window.location = \"/\")\r\n        })\r\n}\r\n\r\n\r\nrender(){\r\n    return(\r\n        <div>\r\n        <h3>Hi {this.state.user} | {this.state.userId}  , Your Session History with {this.state.currentClient}</h3>\r\n        <label>Pick Client</label>\r\n        <select required value={this.state.currentClient} onChange={this.onChangeClient}>\r\n    <option key=\"default\" value=\"default\">Pick Client</option>\r\n    {this.state.clients.map(function(client){\r\n    return <option key={client} value={client}>\r\n    {client}\r\n    </option>\r\n    })}\r\n    </select>\r\n        <table className = \"table\">\r\n            <thead className= \"thead-light\">\r\n            <tr>\r\n            <th>Client Name</th>\r\n            <th>Session Date</th>\r\n            <th>Session State Time</th>\r\n            <th>Session Length</th>\r\n            <th>Paid?</th>\r\n            <th>Actions (Edit/Delete/Mark As Paid)</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.showSessionList()}\r\n            </tbody>\r\n        </table>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n}","C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\compon\\edit-client.compon.js",[],"C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\reportWebVitals.js",[],"C:\\Users\\hbkjo\\Desktop\\Website\\clockin v2\\tutor-app\\src\\compon\\login.js",[],{"ruleId":"60","severity":1,"message":"61","line":59,"column":8,"nodeType":"62","messageId":"63","endLine":59,"endColumn":9},{"ruleId":"60","severity":1,"message":"64","line":60,"column":8,"nodeType":"62","messageId":"63","endLine":60,"endColumn":9},{"ruleId":"65","severity":1,"message":"66","line":16,"column":85,"nodeType":"67","endLine":16,"endColumn":182},{"ruleId":"65","severity":1,"message":"66","line":16,"column":195,"nodeType":"67","endLine":16,"endColumn":299},{"ruleId":"68","severity":1,"message":"69","line":42,"column":31,"nodeType":"70","messageId":"71","endLine":42,"endColumn":33},{"ruleId":"68","severity":1,"message":"69","line":43,"column":44,"nodeType":"70","messageId":"71","endLine":43,"endColumn":46},{"ruleId":"60","severity":1,"message":"72","line":61,"column":19,"nodeType":"62","messageId":"63","endLine":61,"endColumn":34},{"ruleId":"68","severity":1,"message":"69","line":82,"column":64,"nodeType":"70","messageId":"71","endLine":82,"endColumn":66},{"ruleId":"68","severity":1,"message":"69","line":86,"column":36,"nodeType":"70","messageId":"71","endLine":86,"endColumn":38},{"ruleId":"68","severity":1,"message":"69","line":153,"column":32,"nodeType":"70","messageId":"71","endLine":153,"endColumn":34},{"ruleId":"65","severity":1,"message":"66","line":15,"column":85,"nodeType":"67","endLine":15,"endColumn":182},{"ruleId":"65","severity":1,"message":"66","line":15,"column":195,"nodeType":"67","endLine":15,"endColumn":299},"no-unused-vars","'l' is assigned a value but never used.","Identifier","unusedVar","'g' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'tempsessionPaid' is assigned a value but never used."]